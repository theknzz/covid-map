{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joaquim/internship/covid-map/src/components/RightPane/Graph.js\";\nimport React, { useRef } from 'react';\nimport styled from \"@emotion/styled\";\nimport Chart from 'chart.js';\nimport { connect } from 'react-redux';\nimport { rounded } from '../../functions/round';\nconst Container = styled.div`\n    flex: 2;\n    border: 1px solid #ccc;\n    margin-top: 10px;\n`;\n_c = Container;\n\nconst Graph = ({\n  portugal\n}) => {\n  // parse json object into array of tracked days\n  let trackedDays = [];\n\n  for (let i in portugal.days) trackedDays.push(portugal.days[i]); // parse json object into array of infected\n\n\n  let nrInfected = [];\n  let infectedPoints = [];\n\n  for (let i in portugal.infected) {\n    nrInfected.push(portugal.infected[i]);\n  } // parse json object into array of recovered\n\n\n  let nrRecovered = [];\n\n  for (let i in portugal.recovered) nrRecovered.push(portugal.recovered[i]);\n\n  const element = document.getElementById('myChart');\n  const context = element && element.getContext('2d');\n  const myChart = context && new Chart(context, {\n    type: 'line',\n    data: {\n      labels: trackedDays,\n      datasets: [{\n        label: '# of infected',\n        data: nrInfected,\n        backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n        borderColor: ['rgba(255, 99, 132, 1)'],\n        borderWidth: 1\n      }, {\n        label: '# of recovered',\n        data: nrRecovered,\n        backgroundColor: ['rgb(152,253,149, 0.5)'],\n        borderColor: ['rgba(41,138,58, 1)'],\n        borderWidth: 1\n      }]\n    },\n    options: {\n      title: {\n        display: true,\n        text: 'Portugal track'\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: 'myChart',\n      width: 660,\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Graph;\n\nconst mapStateToProps = state => {\n  return {\n    portugal: state.info.portugal\n  };\n};\n\nexport default connect(mapStateToProps)(Graph);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Graph\");","map":{"version":3,"sources":["/home/joaquim/internship/covid-map/src/components/RightPane/Graph.js"],"names":["React","useRef","styled","Chart","connect","rounded","Container","div","Graph","portugal","trackedDays","i","days","push","nrInfected","infectedPoints","infected","nrRecovered","recovered","element","document","getElementById","context","getContext","myChart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","title","display","text","scales","yAxes","ticks","beginAtZero","mapStateToProps","state","info"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\nimport styled from \"@emotion/styled\";\nimport Chart from 'chart.js'\nimport { connect } from 'react-redux'\nimport { rounded } from '../../functions/round'\n\nconst Container = styled.div`\n    flex: 2;\n    border: 1px solid #ccc;\n    margin-top: 10px;\n`\n\nconst Graph = ({ portugal }) => {\n    // parse json object into array of tracked days\n    let trackedDays = [];\n    for (let i in portugal.days)\n        trackedDays.push(portugal.days[i])\n\n    // parse json object into array of infected\n    let nrInfected = []; let infectedPoints = [];\n    for (let i in portugal.infected) {\n        nrInfected.push(portugal.infected[i])\n    }\n\n    // parse json object into array of recovered\n    let nrRecovered = [];\n    for (let i in portugal.recovered)\n        nrRecovered.push(portugal.recovered[i])\n\n    const element = document.getElementById('myChart');\n    const context = element && element.getContext('2d');\n\n    const myChart = context && new Chart(context, {\n        type: 'line',\n        data: {\n            labels: trackedDays,\n            datasets: [\n                {\n                    label: '# of infected',\n                    data: nrInfected,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                    ],\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                    ],\n                    borderWidth: 1\n                },\n                {\n                    label: '# of recovered',\n                    data: nrRecovered,\n                    backgroundColor: [\n                        'rgb(152,253,149, 0.5)',\n                    ],\n                    borderColor: [\n                        'rgba(41,138,58, 1)',\n                    ],\n                    borderWidth: 1\n                }\n                ]\n        },\n        options: {\n            title: {\n                display: true,\n                text: 'Portugal track',\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        }\n    });\n    return (\n        <Container>\n            <canvas id={'myChart'} width={660} height={300}/>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        portugal: state.info.portugal,\n    }\n}\n\nexport default connect(mapStateToProps)(Graph)"]},"metadata":{},"sourceType":"module"}