{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joaquim/internship/covid-map/src/components/MapChart.js\";\nimport React, { memo } from \"react\";\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nconst MapChart = ({\n  setTooltipContent\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n      \"data-tip\": \"\",\n      projectionConfig: {\n        scale: 200\n      },\n      children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            onMouseEnter: () => {\n              const {\n                NAME,\n                POP_EST\n              } = geo.properties;\n              const {\n                type\n              } = geo.type;\n              setTooltipContent(`${NAME} — ${rounded(POP_EST)} ${type}`);\n            },\n            onMouseLeave: () => {\n              setTooltipContent(\"\");\n            },\n            style: {\n              default: {\n                fill: \"#D6D6DA\",\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#F53\",\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#E42\",\n                outline: \"none\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = MapChart;\nexport default _c2 = /*#__PURE__*/memo(MapChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/joaquim/internship/covid-map/src/components/MapChart.js"],"names":["React","memo","ZoomableGroup","ComposableMap","Geographies","Geography","geoUrl","rounded","num","Math","round","MapChart","setTooltipContent","scale","geographies","map","geo","NAME","POP_EST","properties","type","default","fill","outline","hover","pressed","rsmKey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,SAJJ,QAKO,mBALP;AAOA,MAAMC,MAAM,GACR,wGADJ;;AAGA,MAAMC,OAAO,GAAGC,GAAG,IAAI;AACnB,MAAIA,GAAG,GAAG,UAAV,EAAsB;AAClB,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,SAAjB,IAA8B,EAA9B,GAAmC,IAA1C;AACH,GAFD,MAEO,IAAIA,GAAG,GAAG,OAAV,EAAmB;AACtB,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,MAAjB,IAA2B,EAA3B,GAAgC,GAAvC;AACH,GAFM,MAEA;AACH,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,GAAjB,IAAwB,EAAxB,GAA6B,GAApC;AACH;AACJ,CARD;;AAUA,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AACxC,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,kBAAS,EAAxB;AAA2B,MAAA,gBAAgB,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA7C;AAAA,6BACI,QAAC,aAAD;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEP,MAAxB;AAAA,oBACK,CAAC;AAAEQ,YAAAA;AAAF,WAAD,KACGA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,iBACf,QAAC,SAAD;AAEI,YAAA,SAAS,EAAEA,GAFf;AAGI,YAAA,YAAY,EAAE,MAAM;AAChB,oBAAM;AAAEC,gBAAAA,IAAF;AAAQC,gBAAAA;AAAR,kBAAoBF,GAAG,CAACG,UAA9B;AACA,oBAAM;AAAEC,gBAAAA;AAAF,kBAAWJ,GAAG,CAACI,IAArB;AACAR,cAAAA,iBAAiB,CAAE,GAAEK,IAAK,MAAKV,OAAO,CAACW,OAAD,CAAU,IAAGE,IAAK,EAAvC,CAAjB;AACH,aAPL;AAQI,YAAA,YAAY,EAAE,MAAM;AAChBR,cAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH,aAVL;AAWI,YAAA,KAAK,EAAE;AACHS,cAAAA,OAAO,EAAE;AACLC,gBAAAA,IAAI,EAAE,SADD;AAELC,gBAAAA,OAAO,EAAE;AAFJ,eADN;AAKHC,cAAAA,KAAK,EAAE;AACHF,gBAAAA,IAAI,EAAE,MADH;AAEHC,gBAAAA,OAAO,EAAE;AAFN,eALJ;AASHE,cAAAA,OAAO,EAAE;AACLH,gBAAAA,IAAI,EAAE,MADD;AAELC,gBAAAA,OAAO,EAAE;AAFJ;AATN;AAXX,aACSP,GAAG,CAACU,MADb;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAwCH,CAzCD;;KAAMf,Q;AA2CN,kCAAeV,IAAI,CAACU,QAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\nimport {\n    ZoomableGroup,\n    ComposableMap,\n    Geographies,\n    Geography\n} from \"react-simple-maps\";\n\nconst geoUrl =\n    \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst rounded = num => {\n    if (num > 1000000000) {\n        return Math.round(num / 100000000) / 10 + \"Bn\";\n    } else if (num > 1000000) {\n        return Math.round(num / 100000) / 10 + \"M\";\n    } else {\n        return Math.round(num / 100) / 10 + \"K\";\n    }\n};\n\nconst MapChart = ({ setTooltipContent }) => {\n    return (\n        <>\n            <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\n                <ZoomableGroup>\n                    <Geographies geography={geoUrl}>\n                        {({ geographies }) =>\n                            geographies.map(geo => (\n                                <Geography\n                                    key={geo.rsmKey}\n                                    geography={geo}\n                                    onMouseEnter={() => {\n                                        const { NAME, POP_EST } = geo.properties;\n                                        const { type } = geo.type;\n                                        setTooltipContent(`${NAME} — ${rounded(POP_EST)} ${type}`);\n                                    }}\n                                    onMouseLeave={() => {\n                                        setTooltipContent(\"\");\n                                    }}\n                                    style={{\n                                        default: {\n                                            fill: \"#D6D6DA\",\n                                            outline: \"none\"\n                                        },\n                                        hover: {\n                                            fill: \"#F53\",\n                                            outline: \"none\"\n                                        },\n                                        pressed: {\n                                            fill: \"#E42\",\n                                            outline: \"none\"\n                                        }\n                                    }}\n                                />\n                            ))\n                        }\n                    </Geographies>\n                </ZoomableGroup>\n            </ComposableMap>\n        </>\n    );\n};\n\nexport default memo(MapChart);\n"]},"metadata":{},"sourceType":"module"}