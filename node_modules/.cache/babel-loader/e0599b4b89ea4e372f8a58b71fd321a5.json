{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joaquim/internship/covid-map/src/components/RightPane/GenderGraph.js\";\nimport React from 'react';\nimport Chart from 'chart.js';\nimport { connect } from 'react-redux';\n\nconst GenderGraph = ({\n  portugal\n}) => {\n  const canvas = document.getElementById('genderGraph');\n  const context = canvas && canvas.getContext('2d');\n  let infectedM = [];\n\n  for (let i in portugal.infected_m) {\n    const value = portugal.infected_m[i];\n    infectedM.push(value ? value : 0);\n  }\n\n  console.log(infectedM[infectedM.length - 1]);\n  let infectedF = [];\n\n  for (let i in portugal.infected_f) {\n    const value = portugal.infected_f[i];\n    infectedF.push(value ? value : 0);\n  }\n\n  console.log(infectedF[infectedM.length - 1]);\n  const data = {\n    labels: ['M', 'F'],\n    datasets: [{\n      label: '# of masculine infected',\n      data: infectedM[infectedM.length - 1],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n      borderWidth: 1\n    }, {\n      label: '# of feminine infected',\n      data: infectedF[infectedF.length - 1],\n      backgroundColor: ['rgb(152,253,149, 0.5)'],\n      borderWidth: 1\n    }]\n  };\n  const graph = context && new Chart(context, {\n    type: 'bar',\n    data: {\n      labels: ['M', 'F'],\n      datasets: [{\n        label: '# of Votes',\n        data: [infectedM[infectedM.length - 1], infectedF[infectedF.length - 1]],\n        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: 'genderGraph'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GenderGraph;\n\nconst mapStateToProps = state => {\n  return {\n    portugal: state.info.portugal\n  };\n};\n\nexport default connect(mapStateToProps)(GenderGraph);\n\nvar _c;\n\n$RefreshReg$(_c, \"GenderGraph\");","map":{"version":3,"sources":["/home/joaquim/internship/covid-map/src/components/RightPane/GenderGraph.js"],"names":["React","Chart","connect","GenderGraph","portugal","canvas","document","getElementById","context","getContext","infectedM","i","infected_m","value","push","console","log","length","infectedF","infected_f","data","labels","datasets","label","backgroundColor","borderWidth","graph","type","borderColor","options","scales","yAxes","ticks","beginAtZero","mapStateToProps","state","info"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Chart from 'chart.js'\nimport { connect } from 'react-redux'\n\nconst GenderGraph = ({ portugal }) => {\n\n    const canvas = document.getElementById('genderGraph');\n    const context = canvas && canvas.getContext('2d');\n\n    let infectedM = [];\n    for (let i in portugal.infected_m) {\n        const value = portugal.infected_m[i];\n        infectedM.push(value ? value : 0);\n    }\n\n    console.log(infectedM[infectedM.length-1])\n\n    let infectedF = [];\n    for (let i in portugal.infected_f) {\n        const value = portugal.infected_f[i];\n        infectedF.push(value ? value : 0);\n    }\n\n    console.log(infectedF[infectedM.length-1])\n\n    const data = {\n        labels: ['M', 'F'],\n            datasets: [{\n            label: '# of masculine infected',\n            data: infectedM[infectedM.length-1],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n            ],\n            borderWidth: 1\n        }, {\n            label: '# of feminine infected',\n            data: infectedF[infectedF.length-1],\n            backgroundColor: [\n                'rgb(152,253,149, 0.5)',\n            ],\n            borderWidth: 1\n        }]\n    }\n    const graph = context && new Chart(context, {\n        type: 'bar',\n        data: {\n            labels: ['M', 'F'],\n            datasets: [{\n                label: '# of Votes',\n                data: [infectedM[infectedM.length-1], infectedF[infectedF.length-1]],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)'\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)'\n                ],\n                borderWidth: 1\n            }]\n        },\n        options: {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        }\n    });\n\n    return (\n        <canvas id={'genderGraph'}/>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        portugal: state.info.portugal,\n    }\n}\n\nexport default connect(mapStateToProps)(GenderGraph)"]},"metadata":{},"sourceType":"module"}