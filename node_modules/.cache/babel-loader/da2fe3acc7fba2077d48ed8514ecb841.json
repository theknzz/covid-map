{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joaquim/internship/covid-map/src/components/MapChart.js\";\nimport React, { memo } from \"react\";\nimport { rounded } from '../functions/round';\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport Tooltip from \"./Tooltip\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = ({\n  setTooltipContent\n}) => {\n  const getNumberOfInfected = country => {\n    fetch(`https://disease.sh/v3/covid-19/countries/${country}?strict=true`).then(r => r.json().then(res => {\n      setTooltipContent( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tests: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), \" \", rounded(res.tests), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Confirmed: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), \" \", rounded(res.cases), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 74\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Recovered: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), \" \", rounded(res.recovered), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 78\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Deaths: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), \" \", rounded(res.deaths), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 72\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Last updated: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), \" \", res.updated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this));\n    })).catch(err => console.error(err));\n  }; // tests:           tests\n  // confirmed:       cases\n  // recovered:       recovered\n  // deaths:          deaths\n  // last udpate      updated (timestamp)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n      className: 'map',\n      \"data-tip\": \"\",\n      projectionConfig: {\n        scale: 50\n      },\n      width: 500,\n      height: 500,\n      children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n        center: [0, 0],\n        zoom: 2,\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            onClick: () => {\n              const {\n                NAME\n              } = geo.properties;\n              getNumberOfInfected(NAME);\n            },\n            onMouseEnter: () => {\n              const {\n                NAME,\n                POP_EST\n              } = geo.properties;\n              setTooltipContent(`${NAME} â€” ${rounded(POP_EST)}`);\n            },\n            onMouseLeave: () => {\n              setTooltipContent(\"\");\n            },\n            style: {\n              default: {\n                fill: \"#D6D6DA\",\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#F53\",\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#E42\",\n                outline: \"none\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = MapChart;\nexport default _c2 = /*#__PURE__*/memo(MapChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/joaquim/internship/covid-map/src/components/MapChart.js"],"names":["React","memo","rounded","ZoomableGroup","ComposableMap","Geographies","Geography","Tooltip","geoUrl","MapChart","setTooltipContent","getNumberOfInfected","country","fetch","then","r","json","res","tests","cases","recovered","deaths","updated","catch","err","console","error","scale","geographies","map","geo","NAME","properties","POP_EST","default","fill","outline","hover","pressed","rsmKey"],"mappings":"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","sourcesContent":["import React, { memo } from \"react\";\nimport { rounded } from '../functions/round'\nimport {\n    ZoomableGroup,\n    ComposableMap,\n    Geographies,\n    Geography\n} from \"react-simple-maps\";\nimport Tooltip from \"./Tooltip\";\nconst geoUrl =\n    \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\n\nconst MapChart = ({ setTooltipContent }) => {\n\n    const getNumberOfInfected = country => {\n        fetch(`https://disease.sh/v3/covid-19/countries/${country}?strict=true`)\n            .then(r => r.json().then(res => {\n                setTooltipContent(\n                    <div>\n                        <h3>{country}</h3>\n                        <strong>Tests: </strong> {rounded(res.tests)}<br/>\n                        <strong>Confirmed: </strong> {rounded(res.cases)}<br/>\n                        <strong>Recovered: </strong> {rounded(res.recovered)}<br/>\n                        <strong>Deaths: </strong> {rounded(res.deaths)}<br/>\n                        <strong>Last updated: </strong> {res.updated}\n                    </div>\n                );\n            }))\n            .catch(err => console.error(err));\n    }\n\n    // tests:           tests\n    // confirmed:       cases\n    // recovered:       recovered\n    // deaths:          deaths\n    // last udpate      updated (timestamp)\n\n\n    return (\n        <>\n            <ComposableMap className={'map'} data-tip=\"\" projectionConfig={{ scale: 50 }} width={500} height={500}>\n                <ZoomableGroup center={[0, 0]} zoom={2}>\n                    <Geographies geography={geoUrl}>\n                        {({ geographies }) =>\n                            geographies.map(geo => (\n                                <Geography\n                                    key={geo.rsmKey}\n                                    geography={geo}\n                                    onClick={() => {\n                                        const { NAME } = geo.properties;\n                                        getNumberOfInfected(NAME);\n                                    }}\n                                    onMouseEnter={() => {\n                                        const { NAME, POP_EST } = geo.properties;\n                                        setTooltipContent(`${NAME} â€” ${rounded(POP_EST)}`);\n                                    }}\n                                    onMouseLeave={() => {\n                                        setTooltipContent(\"\");\n                                    }}\n                                    style={{\n                                        default: {\n                                            fill: \"#D6D6DA\",\n                                            outline: \"none\"\n                                        },\n                                        hover: {\n                                            fill: \"#F53\",\n                                            outline: \"none\"\n                                        },\n                                        pressed: {\n                                            fill: \"#E42\",\n                                            outline: \"none\"\n                                        }\n                                    }}\n                                />\n                            ))\n                        }\n                    </Geographies>\n                </ZoomableGroup>\n            </ComposableMap>\n        </>\n    );\n};\n\nexport default memo(MapChart);\n"]},"metadata":{},"sourceType":"module"}