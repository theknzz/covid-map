{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/joaquim/internship/covid-map/src/components/RightPane/GenderGraph.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Chart from 'chart.js';\nimport { connect } from 'react-redux';\nimport styled from '@emotion/styled';\nimport { useTheme } from \"emotion-theming\";\nconst Container = styled.div`\n    margin-left: 10px;\n    border: 1px solid ${props => props.theme.border};\n    margin-top: 10px;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    align-items: center;\n    flex: 1;\n    overflow: hidden;\n    background-color: ${props => props.theme.boxBackground};\n`;\n_c = Container;\nconst GraphWrapper = styled.div`\n    background-color: yellow;\n     @media screen and (max-height: 768px) {\n        > canvas {\n            margin: 10px;\n        }\n        width: 100vw;\n        overflow: hidden;\n    }\n    flex: 3;\n`;\n_c2 = GraphWrapper;\nconst Title = styled.div`\n    flex: 0.5;\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    color: ${props => props.theme.text};\n    margin-top: 6px;\n    > h5 {\n        margin: 20px !important;\n    }\n`;\n_c3 = Title;\n\nconst GenderGraph = ({\n  portugal\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const canvas = document.getElementById('genderGraph');\n  const context = canvas && canvas.getContext('2d');\n  let infectedM = [];\n\n  for (let i in portugal.infected_m) {\n    const value = portugal.infected_m[i];\n    infectedM.push(value ? value : 0);\n  }\n\n  let infectedF = [];\n\n  for (let i in portugal.infected_f) {\n    const value = portugal.infected_f[i];\n    infectedF.push(value ? value : 0);\n  }\n\n  context && new Chart(context, {\n    type: 'bar',\n    data: {\n      labels: [''],\n      datasets: [{\n        label: [\"# of Man\"],\n        data: [infectedM[infectedM.length - 1]],\n        backgroundColor: ['rgba(54, 162, 235, 0.6)'],\n        borderColor: ['rgba(54, 162, 235, 1)'],\n        borderWidth: 1\n      }, {\n        label: ['# of Woman'],\n        data: [infectedF[infectedF.length - 1]],\n        backgroundColor: ['rgba(255,0,56,0.6)'],\n        borderColor: ['rgba(253,0,53)'],\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Gender Graph - Portugal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GraphWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: 'genderGraph'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GenderGraph, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c4 = GenderGraph;\n\nconst mapStateToProps = state => {\n  return {\n    portugal: state.info.portugal\n  };\n};\n\nexport default connect(mapStateToProps)(GenderGraph);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"GraphWrapper\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"GenderGraph\");","map":{"version":3,"sources":["/home/joaquim/internship/covid-map/src/components/RightPane/GenderGraph.js"],"names":["React","Chart","connect","styled","useTheme","Container","div","props","theme","border","boxBackground","GraphWrapper","Title","text","GenderGraph","portugal","canvas","document","getElementById","context","getContext","infectedM","i","infected_m","value","push","infectedF","infected_f","type","data","labels","datasets","label","length","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","mapStateToProps","state","info"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;AAC7B;AACA,wBAAwBC,KAAK,IAAGA,KAAK,CAACC,KAAN,CAAYC,MAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBF,KAAK,IAAGA,KAAK,CAACC,KAAN,CAAYE,aAAc;AAC1D,CAXA;KAAML,S;AAaN,MAAMM,YAAY,GAAGR,MAAM,CAACG,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMK,Y;AAWN,MAAMC,KAAK,GAAGT,MAAM,CAACG,GAAI;AACzB;AACA;AACA;AACA;AACA,aAAaC,KAAK,IAAGA,KAAK,CAACC,KAAN,CAAYK,IAAK;AACtC;AACA;AACA;AACA;AACA,CAVA;MAAMD,K;;AAYN,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAElC,QAAMP,KAAK,GAAGJ,QAAQ,EAAtB;AAEA,QAAMY,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAf;AACA,QAAMC,OAAO,GAAGH,MAAM,IAAIA,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAA1B;AAEA,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAT,IAAcP,QAAQ,CAACQ,UAAvB,EAAmC;AAC/B,UAAMC,KAAK,GAAGT,QAAQ,CAACQ,UAAT,CAAoBD,CAApB,CAAd;AACAD,IAAAA,SAAS,CAACI,IAAV,CAAeD,KAAK,GAAGA,KAAH,GAAW,CAA/B;AACH;;AAGD,MAAIE,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIJ,CAAT,IAAcP,QAAQ,CAACY,UAAvB,EAAmC;AAC/B,UAAMH,KAAK,GAAGT,QAAQ,CAACY,UAAT,CAAoBL,CAApB,CAAd;AACAI,IAAAA,SAAS,CAACD,IAAV,CAAeD,KAAK,GAAGA,KAAH,GAAW,CAA/B;AACH;;AAGDL,EAAAA,OAAO,IAAI,IAAIlB,KAAJ,CAAUkB,OAAV,EAAmB;AAC1BS,IAAAA,IAAI,EAAE,KADoB;AAE1BC,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAE,CAAC,EAAD,CADN;AAEFC,MAAAA,QAAQ,EAAE,CACN;AACIC,QAAAA,KAAK,EAAE,CAAC,UAAD,CADX;AAEIH,QAAAA,IAAI,EAAE,CAACR,SAAS,CAACA,SAAS,CAACY,MAAV,GAAiB,CAAlB,CAAV,CAFV;AAGIC,QAAAA,eAAe,EAAE,CACb,yBADa,CAHrB;AAMIC,QAAAA,WAAW,EAAE,CACT,uBADS,CANjB;AASIC,QAAAA,WAAW,EAAE;AATjB,OADM,EAYN;AACQJ,QAAAA,KAAK,EAAE,CAAC,YAAD,CADf;AAEQH,QAAAA,IAAI,EAAE,CAACH,SAAS,CAACA,SAAS,CAACO,MAAV,GAAiB,CAAlB,CAAV,CAFd;AAGQC,QAAAA,eAAe,EAAE,CACb,oBADa,CAHzB;AAMQC,QAAAA,WAAW,EAAE,CACT,gBADS,CANrB;AASQC,QAAAA,WAAW,EAAE;AATrB,OAZM;AAFR,KAFoB;AA4B1BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,KAAK,EAAE;AACHC,YAAAA,WAAW,EAAE;AADV;AADH,SAAD;AADH;AADH;AA5BiB,GAAnB,CAAX;AAuCA,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,EAAEjC,KAAlB;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAA,6BAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAA,6BACI;AAAQ,QAAA,EAAE,EAAE;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CApED;;GAAMM,W;UAEYV,Q;;;MAFZU,W;;AAsEN,MAAM4B,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACH5B,IAAAA,QAAQ,EAAE4B,KAAK,CAACC,IAAN,CAAW7B;AADlB,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAACwC,eAAD,CAAP,CAAyB5B,WAAzB,CAAf","sourcesContent":["import React from 'react'\nimport Chart from 'chart.js'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\nimport {useTheme} from \"emotion-theming\";\n\nconst Container = styled.div`\n    margin-left: 10px;\n    border: 1px solid ${props =>props.theme.border};\n    margin-top: 10px;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    align-items: center;\n    flex: 1;\n    overflow: hidden;\n    background-color: ${props =>props.theme.boxBackground};\n`\n\nconst GraphWrapper = styled.div`\n    background-color: yellow;\n     @media screen and (max-height: 768px) {\n        > canvas {\n            margin: 10px;\n        }\n        width: 100vw;\n        overflow: hidden;\n    }\n    flex: 3;\n`\nconst Title = styled.div`\n    flex: 0.5;\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    color: ${props =>props.theme.text};\n    margin-top: 6px;\n    > h5 {\n        margin: 20px !important;\n    }\n`\n\nconst GenderGraph = ({ portugal }) => {\n\n    const theme = useTheme();\n\n    const canvas = document.getElementById('genderGraph');\n    const context = canvas && canvas.getContext('2d');\n\n    let infectedM = [];\n    for (let i in portugal.infected_m) {\n        const value = portugal.infected_m[i];\n        infectedM.push(value ? value : 0);\n    }\n\n\n    let infectedF = [];\n    for (let i in portugal.infected_f) {\n        const value = portugal.infected_f[i];\n        infectedF.push(value ? value : 0);\n    }\n\n\n    context && new Chart(context, {\n        type: 'bar',\n        data: {\n            labels: [''],\n            datasets: [\n                {\n                    label: [\"# of Man\"],\n                    data: [infectedM[infectedM.length-1]],\n                    backgroundColor: [\n                        'rgba(54, 162, 235, 0.6)',\n                    ],\n                    borderColor: [\n                        'rgba(54, 162, 235, 1)',\n                    ],\n                    borderWidth: 1\n                },\n                {\n                        label: ['# of Woman'],\n                        data: [infectedF[infectedF.length-1]],\n                        backgroundColor: [\n                            'rgba(255,0,56,0.6)',\n                        ],\n                        borderColor: [\n                            'rgba(253,0,53)',\n                        ],\n                        borderWidth: 1\n                }]\n        },\n        options: {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        }\n    });\n\n    return (\n        <Container theme={theme}>\n            <Title theme={theme}><h5>Gender Graph - Portugal</h5></Title>\n            <GraphWrapper>\n                <canvas id={'genderGraph'}/>\n            </GraphWrapper>\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        portugal: state.info.portugal,\n    }\n}\n\nexport default connect(mapStateToProps)(GenderGraph)"]},"metadata":{},"sourceType":"module"}