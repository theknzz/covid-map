{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joaquim/internship/covid-map/src/components/RightPane/PortugalGraph.js\";\nimport React from 'react';\nimport styled from \"@emotion/styled\";\nimport Chart from 'chart.js';\nimport { connect } from 'react-redux';\nconst Container = styled.div`\n    flex: 2;\n    border: 1px solid #525252;\n    margin-top: 10px;\n    background-color: #222222;\n    @media screen and (max-height: 768px) {\n        > canvas {\n            max-width: 100%;\n            flex: 1;\n            min-height: 20vh;\n        }\n    }\n`;\n_c = Container;\n\nconst PortugalGraph = ({\n  portugal\n}) => {\n  // parse json object into array of tracked days\n  let trackedDays = [];\n\n  for (let i in portugal.days) trackedDays.push(portugal.days[i]); // parse json object into array of infected\n\n\n  let nrInfected = [];\n\n  for (let i in portugal.infected) {\n    nrInfected.push(portugal.infected[i]);\n  } // parse json object into array of recovered\n\n\n  let nrRecovered = [];\n\n  for (let i in portugal.recovered) {\n    nrRecovered.push(portugal.recovered[i]);\n  }\n\n  const element = document.getElementById('myChart');\n  const context = element && element.getContext('2d');\n  context && new Chart(context, {\n    type: 'line',\n    data: {\n      labels: trackedDays,\n      datasets: [{\n        label: '# of infected',\n        data: nrInfected,\n        backgroundColor: ['rgb(255,25,25, 0.2)'],\n        borderWidth: 1\n      }, {\n        label: '# of recovered',\n        data: nrRecovered,\n        backgroundColor: ['rgb(152,253,149, 0.5)'],\n        borderWidth: 1\n      }]\n    },\n    options: {\n      title: {\n        display: true,\n        text: 'Portugal track'\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: 'myChart',\n      width: 660\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = PortugalGraph;\n\nconst mapStateToProps = state => {\n  return {\n    portugal: state.info.portugal\n  };\n};\n\nexport default connect(mapStateToProps)(PortugalGraph);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"PortugalGraph\");","map":{"version":3,"sources":["/home/joaquim/internship/covid-map/src/components/RightPane/PortugalGraph.js"],"names":["React","styled","Chart","connect","Container","div","PortugalGraph","portugal","trackedDays","i","days","push","nrInfected","infected","nrRecovered","recovered","element","document","getElementById","context","getContext","type","data","labels","datasets","label","backgroundColor","borderWidth","options","title","display","text","scales","yAxes","ticks","beginAtZero","mapStateToProps","state","info"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;KAAMD,S;;AAcN,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC;AACA,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAT,IAAcF,QAAQ,CAACG,IAAvB,EACIF,WAAW,CAACG,IAAZ,CAAiBJ,QAAQ,CAACG,IAAT,CAAcD,CAAd,CAAjB,EAJgC,CAMpC;;;AACA,MAAIG,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIH,CAAT,IAAcF,QAAQ,CAACM,QAAvB,EAAiC;AAC7BD,IAAAA,UAAU,CAACD,IAAX,CAAgBJ,QAAQ,CAACM,QAAT,CAAkBJ,CAAlB,CAAhB;AACH,GAVmC,CAYpC;;;AACA,MAAIK,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIL,CAAT,IAAcF,QAAQ,CAACQ,SAAvB,EAAkC;AAC9BD,IAAAA,WAAW,CAACH,IAAZ,CAAiBJ,QAAQ,CAACQ,SAAT,CAAmBN,CAAnB,CAAjB;AACH;;AAED,QAAMO,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AACA,QAAMC,OAAO,GAAGH,OAAO,IAAIA,OAAO,CAACI,UAAR,CAAmB,IAAnB,CAA3B;AAEAD,EAAAA,OAAO,IAAI,IAAIjB,KAAJ,CAAUiB,OAAV,EAAmB;AAC1BE,IAAAA,IAAI,EAAE,MADoB;AAE1BC,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEf,WADN;AAEFgB,MAAAA,QAAQ,EAAE,CACN;AACIC,QAAAA,KAAK,EAAE,eADX;AAEIH,QAAAA,IAAI,EAAEV,UAFV;AAGIc,QAAAA,eAAe,EAAE,CACb,qBADa,CAHrB;AAMIC,QAAAA,WAAW,EAAE;AANjB,OADM,EASN;AACIF,QAAAA,KAAK,EAAE,gBADX;AAEIH,QAAAA,IAAI,EAAER,WAFV;AAGIY,QAAAA,eAAe,EAAE,CACb,uBADa,CAHrB;AAMIC,QAAAA,WAAW,EAAE;AANjB,OATM;AAFR,KAFoB;AAuB1BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,IAAI,EAAE;AAFH,OADF;AAKLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,KAAK,EAAE;AACHC,YAAAA,WAAW,EAAE;AADV;AADH,SAAD;AADH;AALH;AAvBiB,GAAnB,CAAX;AAqCA,sBACI,QAAC,SAAD;AAAA,2BACI;AAAQ,MAAA,EAAE,EAAE,SAAZ;AAAuB,MAAA,KAAK,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA/DD;;MAAM7B,a;;AAiEN,MAAM8B,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACH9B,IAAAA,QAAQ,EAAE8B,KAAK,CAACC,IAAN,CAAW/B;AADlB,GAAP;AAGH,CAJD;;AAMA,eAAeJ,OAAO,CAACiC,eAAD,CAAP,CAAyB9B,aAAzB,CAAf","sourcesContent":["import React from 'react'\nimport styled from \"@emotion/styled\";\nimport Chart from 'chart.js'\nimport { connect } from 'react-redux'\n\nconst Container = styled.div`\n    flex: 2;\n    border: 1px solid #525252;\n    margin-top: 10px;\n    background-color: #222222;\n    @media screen and (max-height: 768px) {\n        > canvas {\n            max-width: 100%;\n            flex: 1;\n            min-height: 20vh;\n        }\n    }\n`\n\nconst PortugalGraph = ({ portugal }) => {\n    // parse json object into array of tracked days\n    let trackedDays = [];\n    for (let i in portugal.days)\n        trackedDays.push(portugal.days[i])\n\n    // parse json object into array of infected\n    let nrInfected = [];\n    for (let i in portugal.infected) {\n        nrInfected.push(portugal.infected[i])\n    }\n\n    // parse json object into array of recovered\n    let nrRecovered = [];\n    for (let i in portugal.recovered) {\n        nrRecovered.push(portugal.recovered[i])\n    }\n\n    const element = document.getElementById('myChart');\n    const context = element && element.getContext('2d');\n\n    context && new Chart(context, {\n        type: 'line',\n        data: {\n            labels: trackedDays,\n            datasets: [\n                {\n                    label: '# of infected',\n                    data: nrInfected,\n                    backgroundColor: [\n                        'rgb(255,25,25, 0.2)',\n                    ],\n                    borderWidth: 1\n                },\n                {\n                    label: '# of recovered',\n                    data: nrRecovered,\n                    backgroundColor: [\n                        'rgb(152,253,149, 0.5)',\n                    ],\n                    borderWidth: 1\n                }\n                ]\n        },\n        options: {\n            title: {\n                display: true,\n                text: 'Portugal track',\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        }\n    });\n    return (\n        <Container>\n            <canvas id={'myChart'} width={660}/>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        portugal: state.info.portugal,\n    }\n}\n\nexport default connect(mapStateToProps)(PortugalGraph)"]},"metadata":{},"sourceType":"module"}