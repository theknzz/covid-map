{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/joaquim/internship/covid-map/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    flex: 0.5;\\n    display: flex;\\n    flex-flow: column;\\n    justify-content: center;\\n    color: \",\";\\n    margin-top: 6px;\\n    > h5 {\\n        margin: 20px !important;\\n    }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n     @media screen and (max-height: 768px) {\\n        > canvas {\\n            margin: 10px;\\n        }\\n        width: 100vw;\\n        overflow: hidden;\\n    }\\n    flex: 3;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    margin-left: 10px;\\n    border: 1px solid \",\";\\n    margin-top: 10px;\\n    display: flex;\\n    flex-flow: column nowrap;\\n    justify-content: center;\\n    align-items: center;\\n    flex: 1;\\n    overflow: hidden;\\n    background-color: \",\";\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import Chart from'chart.js';import{connect}from'react-redux';import styled from'@emotion/styled';import{useTheme}from\"emotion-theming\";var Container=styled.div(_templateObject(),function(props){return props.theme.border;},function(props){return props.theme.boxBackground;});var GraphWrapper=styled.div(_templateObject2());var Title=styled.div(_templateObject3(),function(props){return props.theme.text;});var GenderGraph=function GenderGraph(_ref){var portugal=_ref.portugal;var theme=useTheme();var canvas=document.getElementById('genderGraph');var context=canvas&&canvas.getContext('2d');var infectedM=[];for(var i in portugal.infected_m){var value=portugal.infected_m[i];infectedM.push(value?value:0);}var infectedF=[];for(var _i in portugal.infected_f){var _value=portugal.infected_f[_i];infectedF.push(_value?_value:0);}context&&new Chart(context,{type:'bar',data:{labels:[''],datasets:[{label:[\"# of Man\"],data:[infectedM[infectedM.length-1]],backgroundColor:['rgba(54, 162, 235, 0.6)'],borderColor:['rgba(54, 162, 235, 1)'],borderWidth:1},{label:['# of Woman'],data:[infectedF[infectedF.length-1]],backgroundColor:['rgba(255,0,56,0.6)'],borderColor:['rgba(253,0,53)'],borderWidth:1}]},options:{scales:{yAxes:[{ticks:{beginAtZero:true}}]}}});return/*#__PURE__*/_jsxs(Container,{theme:theme,children:[/*#__PURE__*/_jsx(Title,{theme:theme,children:/*#__PURE__*/_jsx(\"h5\",{children:\"Gender Graph - Portugal\"})}),/*#__PURE__*/_jsx(GraphWrapper,{children:/*#__PURE__*/_jsx(\"canvas\",{id:'genderGraph',width:300,height:250})})]});};var mapStateToProps=function mapStateToProps(state){return{portugal:state.info.portugal};};export default connect(mapStateToProps)(GenderGraph);","map":{"version":3,"sources":["/home/joaquim/internship/covid-map/src/components/RightPane/GenderGraph.js"],"names":["React","Chart","connect","styled","useTheme","Container","div","props","theme","border","boxBackground","GraphWrapper","Title","text","GenderGraph","portugal","canvas","document","getElementById","context","getContext","infectedM","i","infected_m","value","push","infectedF","infected_f","type","data","labels","datasets","label","length","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","mapStateToProps","state","info"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Chart from 'chart.js'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\nimport {useTheme} from \"emotion-theming\";\n\nconst Container = styled.div`\n    margin-left: 10px;\n    border: 1px solid ${props =>props.theme.border};\n    margin-top: 10px;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    align-items: center;\n    flex: 1;\n    overflow: hidden;\n    background-color: ${props =>props.theme.boxBackground};\n`\n\nconst GraphWrapper = styled.div`\n     @media screen and (max-height: 768px) {\n        > canvas {\n            margin: 10px;\n        }\n        width: 100vw;\n        overflow: hidden;\n    }\n    flex: 3;\n`\nconst Title = styled.div`\n    flex: 0.5;\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    color: ${props =>props.theme.text};\n    margin-top: 6px;\n    > h5 {\n        margin: 20px !important;\n    }\n`\n\nconst GenderGraph = ({ portugal }) => {\n\n    const theme = useTheme();\n\n    const canvas = document.getElementById('genderGraph');\n    const context = canvas && canvas.getContext('2d');\n\n    let infectedM = [];\n    for (let i in portugal.infected_m) {\n        const value = portugal.infected_m[i];\n        infectedM.push(value ? value : 0);\n    }\n\n\n    let infectedF = [];\n    for (let i in portugal.infected_f) {\n        const value = portugal.infected_f[i];\n        infectedF.push(value ? value : 0);\n    }\n\n\n    context && new Chart(context, {\n        type: 'bar',\n        data: {\n            labels: [''],\n            datasets: [\n                {\n                    label: [\"# of Man\"],\n                    data: [infectedM[infectedM.length-1]],\n                    backgroundColor: [\n                        'rgba(54, 162, 235, 0.6)',\n                    ],\n                    borderColor: [\n                        'rgba(54, 162, 235, 1)',\n                    ],\n                    borderWidth: 1\n                },\n                {\n                        label: ['# of Woman'],\n                        data: [infectedF[infectedF.length-1]],\n                        backgroundColor: [\n                            'rgba(255,0,56,0.6)',\n                        ],\n                        borderColor: [\n                            'rgba(253,0,53)',\n                        ],\n                        borderWidth: 1\n                }]\n        },\n        options: {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        }\n    });\n\n    return (\n        <Container theme={theme}>\n            <Title theme={theme}><h5>Gender Graph - Portugal</h5></Title>\n            <GraphWrapper>\n                <canvas id={'genderGraph'} width={300} height={250}/>\n            </GraphWrapper>\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        portugal: state.info.portugal,\n    }\n}\n\nexport default connect(mapStateToProps)(GenderGraph)"]},"metadata":{},"sourceType":"module"}