{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joaquim/internship/covid-map/src/components/RightPane/Graph.js\";\nimport React, { useRef } from 'react';\nimport styled from \"@emotion/styled\";\nimport Chart from 'chart.js';\nimport { connect } from 'react-redux';\nimport { rounded } from '../../functions/round';\nconst Container = styled.div`\n    flex: 2;\n    border: 1px solid #ccc;\n    margin-top: 10px;\n`;\n_c = Container;\n\nconst Graph = ({\n  portugal\n}) => {\n  // parse json object into array of tracked days\n  let trackedDays = [];\n\n  for (let i in portugal.days) trackedDays.push(portugal.days[i]); // parse json object into array of infected\n\n\n  let nrInfected = [];\n\n  for (let i in portugal.infected) nrInfected.push(portugal.infected[i]);\n\n  const element = document.getElementById('myChart');\n  const context = element && element.getContext('2d');\n  console.log(context);\n  const myChart = context && new Chart(context, {\n    type: 'line',\n    data: {\n      labels: trackedDays,\n      datasets: [{\n        label: '# of infected',\n        data: nrInfected,\n        backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n        borderColor: ['rgba(255, 99, 132, 1)'],\n        borderWidth: 1\n      }]\n    },\n    options: {\n      title: {\n        display: true,\n        text: 'Portugal track'\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: 'myChart',\n      width: 600,\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Graph;\n\nconst mapStateToProps = state => {\n  return {\n    portugal: state.info.portugal\n  };\n};\n\nexport default connect(mapStateToProps)(Graph);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Graph\");","map":{"version":3,"sources":["/home/joaquim/internship/covid-map/src/components/RightPane/Graph.js"],"names":["React","useRef","styled","Chart","connect","rounded","Container","div","Graph","portugal","trackedDays","i","days","push","nrInfected","infected","element","document","getElementById","context","getContext","console","log","myChart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","title","display","text","scales","yAxes","ticks","beginAtZero","mapStateToProps","state","info"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA,CAJA;KAAMD,S;;AAMN,MAAME,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5B;AACA,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAT,IAAcF,QAAQ,CAACG,IAAvB,EACIF,WAAW,CAACG,IAAZ,CAAiBJ,QAAQ,CAACG,IAAT,CAAcD,CAAd,CAAjB,EAJwB,CAM5B;;;AACA,MAAIG,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIH,CAAT,IAAcF,QAAQ,CAACM,QAAvB,EACID,UAAU,CAACD,IAAX,CAAgBJ,QAAQ,CAACM,QAAT,CAAkBJ,CAAlB,CAAhB;;AAEJ,QAAMK,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AACA,QAAMC,OAAO,GAAGH,OAAO,IAAIA,OAAO,CAACI,UAAR,CAAmB,IAAnB,CAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,QAAMI,OAAO,GAAGJ,OAAO,IAAI,IAAIhB,KAAJ,CAAUgB,OAAV,EAAmB;AAC1CK,IAAAA,IAAI,EAAE,MADoC;AAE1CC,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEhB,WADN;AAEFiB,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,eADA;AAEPH,QAAAA,IAAI,EAAEX,UAFC;AAGPe,QAAAA,eAAe,EAAE,CACb,yBADa,CAHV;AAMPC,QAAAA,WAAW,EAAE,CACT,uBADS,CANN;AASPC,QAAAA,WAAW,EAAE;AATN,OAAD;AAFR,KAFoC;AAgB1CC,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,IAAI,EAAE;AAFH,OADF;AAKLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,KAAK,EAAE;AACHC,YAAAA,WAAW,EAAE;AADV;AADH,SAAD;AADH;AALH;AAhBiC,GAAnB,CAA3B;AA8BA,sBACI,QAAC,SAAD;AAAA,2BACI;AAAQ,MAAA,EAAE,EAAE,SAAZ;AAAuB,MAAA,KAAK,EAAE,GAA9B;AAAmC,MAAA,MAAM,EAAE;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjDD;;MAAM/B,K;;AAmDN,MAAMgC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHhC,IAAAA,QAAQ,EAAEgC,KAAK,CAACC,IAAN,CAAWjC;AADlB,GAAP;AAGH,CAJD;;AAMA,eAAeL,OAAO,CAACoC,eAAD,CAAP,CAAyBhC,KAAzB,CAAf","sourcesContent":["import React, { useRef } from 'react'\nimport styled from \"@emotion/styled\";\nimport Chart from 'chart.js'\nimport { connect } from 'react-redux'\nimport { rounded } from '../../functions/round'\n\nconst Container = styled.div`\n    flex: 2;\n    border: 1px solid #ccc;\n    margin-top: 10px;\n`\n\nconst Graph = ({ portugal }) => {\n    // parse json object into array of tracked days\n    let trackedDays = [];\n    for (let i in portugal.days)\n        trackedDays.push(portugal.days[i])\n\n    // parse json object into array of infected\n    let nrInfected = [];\n    for (let i in portugal.infected)\n        nrInfected.push(portugal.infected[i])\n\n    const element = document.getElementById('myChart');\n    const context = element && element.getContext('2d');\n    console.log(context)\n    const myChart = context && new Chart(context, {\n        type: 'line',\n        data: {\n            labels: trackedDays,\n            datasets: [{\n                label: '# of infected',\n                data: nrInfected,\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                ],\n                borderWidth: 1\n            }]\n        },\n        options: {\n            title: {\n                display: true,\n                text: 'Portugal track',\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        }\n    });\n    return (\n        <Container>\n            <canvas id={'myChart'} width={600} height={300} />\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        portugal: state.info.portugal,\n    }\n}\n\nexport default connect(mapStateToProps)(Graph)"]},"metadata":{},"sourceType":"module"}