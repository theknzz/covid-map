{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joaquim/internship/covid-map/src/components/RightPane/GenderGraph.js\";\nimport React from 'react';\nimport Chart from 'chart.js';\nimport { connect } from 'react-redux';\n\nconst GenderGraph = ({\n  portugal\n}) => {\n  const canvas = document.getElementById('genderGraph');\n  const context = canvas && canvas.getContext('2d');\n  let infectedM = []; // for (let i in portugal.infected_m) {\n  //     const value = portugal.infected_m[i];\n  //     infectedM.push(value ? value : 0);\n  // }\n\n  console.log(infectedM);\n  let infectedF = portugal.infected_f[0]; // for (let i in portugal.infected_f) {\n  //     const value = portugal.infected_f[i];\n  //     infectedF.push(value ? value : 0);\n  // }\n\n  console.log(infectedF);\n  const graph = context && new Chart(context, {\n    type: 'bar',\n    data: {\n      labels: ['M', 'F'],\n      datasets: [{\n        label: '# of masculine infected',\n        data: infectedM,\n        backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n        borderWidth: 1\n      }, {\n        label: '# of feminine infected',\n        data: infectedF,\n        backgroundColor: ['rgb(152,253,149, 0.5)'],\n        borderWidth: 1\n      }]\n    },\n    options: {\n      title: {\n        display: true,\n        text: 'Portugal track'\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: 'genderGraph'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GenderGraph;\n\nconst mapStateToProps = state => {\n  return {\n    portugal: state.info.portugal\n  };\n};\n\nexport default connect(mapStateToProps)(GenderGraph);\n\nvar _c;\n\n$RefreshReg$(_c, \"GenderGraph\");","map":{"version":3,"sources":["/home/joaquim/internship/covid-map/src/components/RightPane/GenderGraph.js"],"names":["React","Chart","connect","GenderGraph","portugal","canvas","document","getElementById","context","getContext","infectedM","console","log","infectedF","infected_f","graph","type","data","labels","datasets","label","backgroundColor","borderWidth","options","title","display","text","scales","yAxes","ticks","beginAtZero","mapStateToProps","state","info"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAElC,QAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAf;AACA,QAAMC,OAAO,GAAGH,MAAM,IAAIA,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAA1B;AAEA,MAAIC,SAAS,GAAG,EAAhB,CALkC,CAMlC;AACA;AACA;AACA;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA,MAAIG,SAAS,GAAGT,QAAQ,CAACU,UAAT,CAAoB,CAApB,CAAhB,CAbkC,CAclC;AACA;AACA;AACA;;AAEAH,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACA,QAAME,KAAK,GAAGP,OAAO,IAAI,IAAIP,KAAJ,CAAUO,OAAV,EAAmB;AACxCQ,IAAAA,IAAI,EAAE,KADkC;AAExCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,yBADA;AAEPH,QAAAA,IAAI,EAAEP,SAFC;AAGPW,QAAAA,eAAe,EAAE,CACb,yBADa,CAHV;AAMPC,QAAAA,WAAW,EAAE;AANN,OAAD,EAOP;AACCF,QAAAA,KAAK,EAAE,wBADR;AAECH,QAAAA,IAAI,EAAEJ,SAFP;AAGCQ,QAAAA,eAAe,EAAE,CACb,uBADa,CAHlB;AAMCC,QAAAA,WAAW,EAAE;AANd,OAPO;AAFR,KAFkC;AAoBxCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,IAAI,EAAE;AAFH,OADF;AAKLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,KAAK,EAAE;AACHC,YAAAA,WAAW,EAAE;AADV;AADH,SAAD;AADH;AALH;AApB+B,GAAnB,CAAzB;AAmCA,sBACI;AAAQ,IAAA,EAAE,EAAE;AAAZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA1DD;;KAAM3B,W;;AA4DN,MAAM4B,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACH5B,IAAAA,QAAQ,EAAE4B,KAAK,CAACC,IAAN,CAAW7B;AADlB,GAAP;AAGH,CAJD;;AAMA,eAAeF,OAAO,CAAC6B,eAAD,CAAP,CAAyB5B,WAAzB,CAAf","sourcesContent":["import React from 'react'\nimport Chart from 'chart.js'\nimport { connect } from 'react-redux'\n\nconst GenderGraph = ({ portugal }) => {\n\n    const canvas = document.getElementById('genderGraph');\n    const context = canvas && canvas.getContext('2d');\n\n    let infectedM = [];\n    // for (let i in portugal.infected_m) {\n    //     const value = portugal.infected_m[i];\n    //     infectedM.push(value ? value : 0);\n    // }\n\n    console.log(infectedM)\n\n    let infectedF = portugal.infected_f[0];\n    // for (let i in portugal.infected_f) {\n    //     const value = portugal.infected_f[i];\n    //     infectedF.push(value ? value : 0);\n    // }\n\n    console.log(infectedF)\n    const graph = context && new Chart(context, {\n        type: 'bar',\n        data: {\n            labels: ['M', 'F'],\n            datasets: [{\n                label: '# of masculine infected',\n                data: infectedM,\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                ],\n                borderWidth: 1\n            }, {\n                label: '# of feminine infected',\n                data: infectedF,\n                backgroundColor: [\n                    'rgb(152,253,149, 0.5)',\n                ],\n                borderWidth: 1\n            }]\n        },\n        options: {\n            title: {\n                display: true,\n                text: 'Portugal track',\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        }\n    });\n\n    return (\n        <canvas id={'genderGraph'}/>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        portugal: state.info.portugal,\n    }\n}\n\nexport default connect(mapStateToProps)(GenderGraph)"]},"metadata":{},"sourceType":"module"}