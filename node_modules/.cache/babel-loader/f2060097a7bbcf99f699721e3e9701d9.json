{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joaquim/internship/covid-map/src/components/RightPane/GenderGraph.js\";\nimport React from 'react';\nimport Chart from 'chart.js';\nimport { connect } from 'react-redux';\nimport styled from '@emotion/styled';\nconst Container = styled.div`\n    margin-left: 10px;\n    border: 1px solid #ccc;\n    margin-top: 10px;\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: center;\n    align-items: center;    \n`;\n_c = Container;\n\nconst GenderGraph = ({\n  portugal\n}) => {\n  const canvas = document.getElementById('genderGraph');\n  const context = canvas && canvas.getContext('2d');\n  let infectedM = [];\n\n  for (let i in portugal.infected_m) {\n    const value = portugal.infected_m[i];\n    infectedM.push(value ? value : 0);\n  }\n\n  console.log(infectedM[infectedM.length - 1]);\n  let infectedF = [];\n\n  for (let i in portugal.infected_f) {\n    const value = portugal.infected_f[i];\n    infectedF.push(value ? value : 0);\n  }\n\n  console.log(infectedF[infectedM.length - 1]);\n  const graph = context && new Chart(context, {\n    type: 'bar',\n    data: {\n      labels: ['Nr. of infected'],\n      datasets: [{\n        label: ['# of Man'],\n        data: [infectedM[infectedM.length - 1]],\n        backgroundColor: ['rgba(54, 162, 235, 0.2)'],\n        borderColor: ['rgba(54, 162, 235, 1)'],\n        borderWidth: 1\n      }, {\n        label: ['# of Woman'],\n        data: [infectedF[infectedF.length - 1]],\n        backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n        borderColor: ['rgba(255, 99, 132, 1)'],\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: 'genderGraph',\n      width: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = GenderGraph;\n\nconst mapStateToProps = state => {\n  return {\n    portugal: state.info.portugal\n  };\n};\n\nexport default connect(mapStateToProps)(GenderGraph);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"GenderGraph\");","map":{"version":3,"sources":["/home/joaquim/internship/covid-map/src/components/RightPane/GenderGraph.js"],"names":["React","Chart","connect","styled","Container","div","GenderGraph","portugal","canvas","document","getElementById","context","getContext","infectedM","i","infected_m","value","push","console","log","length","infectedF","infected_f","graph","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","mapStateToProps","state","info"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Chart from 'chart.js'\nimport { connect } from 'react-redux'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div`\n    margin-left: 10px;\n    border: 1px solid #ccc;\n    margin-top: 10px;\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: center;\n    align-items: center;    \n`\n\nconst GenderGraph = ({ portugal }) => {\n\n    const canvas = document.getElementById('genderGraph');\n    const context = canvas && canvas.getContext('2d');\n\n    let infectedM = [];\n    for (let i in portugal.infected_m) {\n        const value = portugal.infected_m[i];\n        infectedM.push(value ? value : 0);\n    }\n\n    console.log(infectedM[infectedM.length-1])\n\n    let infectedF = [];\n    for (let i in portugal.infected_f) {\n        const value = portugal.infected_f[i];\n        infectedF.push(value ? value : 0);\n    }\n\n    console.log(infectedF[infectedM.length-1])\n\n    const graph = context && new Chart(context, {\n        type: 'bar',\n        data: {\n            labels: ['Nr. of infected'],\n            datasets: [\n                {\n                    label: ['# of Man'],\n                    data: [infectedM[infectedM.length-1]],\n                    backgroundColor: [\n                        'rgba(54, 162, 235, 0.2)',\n                    ],\n                    borderColor: [\n                        'rgba(54, 162, 235, 1)',\n                    ],\n                    borderWidth: 1\n                },\n                {\n                        label: ['# of Woman'],\n                        data: [infectedF[infectedF.length-1]],\n                        backgroundColor: [\n                            'rgba(255, 99, 132, 0.2)',\n                        ],\n                        borderColor: [\n                            'rgba(255, 99, 132, 1)',\n                        ],\n                        borderWidth: 1\n                }]\n        },\n        options: {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        }\n    });\n\n    return (\n        <Container>\n            <canvas id={'genderGraph'} width={100}/>\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        portugal: state.info.portugal,\n    }\n}\n\nexport default connect(mapStateToProps)(GenderGraph)"]},"metadata":{},"sourceType":"module"}