{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/joaquim/internship/covid-map/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{jsx as _jsx}from\"react/jsx-runtime\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    flex: 2;\\n    border: 1px solid \",\";\\n    margin-top: 10px;\\n    background-color: \",\";\\n    @media screen and (max-height: 768px) {\\n        > canvas {\\n            max-width: 100%;\\n            flex: 1;\\n        }\\n    }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from\"@emotion/styled\";import Chart from'chart.js';import{connect}from'react-redux';import{useTheme}from\"emotion-theming\";var Container=styled.div(_templateObject(),function(props){return props.theme.border;},function(props){return props.theme.boxBackground;});var PortugalGraph=function PortugalGraph(_ref){var portugal=_ref.portugal;// parse json object into array of tracked days\nvar trackedDays=[];for(var i in portugal.days){trackedDays.push(portugal.days[i]);}// parse json object into array of infected\nvar nrInfected=[];for(var _i in portugal.infected){nrInfected.push(portugal.infected[_i]);}// parse json object into array of recovered\nvar nrRecovered=[];for(var _i2 in portugal.recovered){nrRecovered.push(portugal.recovered[_i2]);}var element=document.getElementById('myChart');var context=element&&element.getContext('2d');context&&new Chart(context,{type:'line',data:{labels:trackedDays,datasets:[{label:'# of infected',data:nrInfected,backgroundColor:['rgba(255,25,25, 0.2)'],borderWidth:1},{label:'# of recovered',data:nrRecovered,backgroundColor:['rgba(152,253,149, 0.6)'],borderWidth:1}]},options:{title:{display:true,text:'Portugal track'},scales:{yAxes:[{ticks:{beginAtZero:true}}]}}});var theme=useTheme();return/*#__PURE__*/_jsx(Container,{theme:theme,children:/*#__PURE__*/_jsx(\"canvas\",{id:'myChart',width:660})});};var mapStateToProps=function mapStateToProps(state){return{portugal:state.info.portugal};};export default connect(mapStateToProps)(PortugalGraph);","map":{"version":3,"sources":["/home/joaquim/internship/covid-map/src/components/RightPane/PortugalGraph.js"],"names":["React","styled","Chart","connect","useTheme","Container","div","props","theme","border","boxBackground","PortugalGraph","portugal","trackedDays","i","days","push","nrInfected","infected","nrRecovered","recovered","element","document","getElementById","context","getContext","type","data","labels","datasets","label","backgroundColor","borderWidth","options","title","display","text","scales","yAxes","ticks","beginAtZero","mapStateToProps","state","info"],"mappings":"6hBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAAQC,QAAR,KAAuB,iBAAvB,CAEA,GAAMC,CAAAA,SAAS,CAAGJ,MAAM,CAACK,GAAV,mBAES,SAAAC,KAAK,QAAGA,CAAAA,KAAK,CAACC,KAAN,CAAYC,MAAf,EAFd,CAIS,SAAAF,KAAK,QAAGA,CAAAA,KAAK,CAACC,KAAN,CAAYE,aAAf,EAJd,CAAf,CAaA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACpC;AACA,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACA,IAAK,GAAIC,CAAAA,CAAT,GAAcF,CAAAA,QAAQ,CAACG,IAAvB,EACIF,WAAW,CAACG,IAAZ,CAAiBJ,QAAQ,CAACG,IAAT,CAAcD,CAAd,CAAjB,EADJ,CAGA;AACA,GAAIG,CAAAA,UAAU,CAAG,EAAjB,CACA,IAAK,GAAIH,CAAAA,EAAT,GAAcF,CAAAA,QAAQ,CAACM,QAAvB,CAAiC,CAC7BD,UAAU,CAACD,IAAX,CAAgBJ,QAAQ,CAACM,QAAT,CAAkBJ,EAAlB,CAAhB,EACH,CAED;AACA,GAAIK,CAAAA,WAAW,CAAG,EAAlB,CACA,IAAK,GAAIL,CAAAA,GAAT,GAAcF,CAAAA,QAAQ,CAACQ,SAAvB,CAAkC,CAC9BD,WAAW,CAACH,IAAZ,CAAiBJ,QAAQ,CAACQ,SAAT,CAAmBN,GAAnB,CAAjB,EACH,CAED,GAAMO,CAAAA,OAAO,CAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB,CACA,GAAMC,CAAAA,OAAO,CAAGH,OAAO,EAAIA,OAAO,CAACI,UAAR,CAAmB,IAAnB,CAA3B,CAEAD,OAAO,EAAI,GAAItB,CAAAA,KAAJ,CAAUsB,OAAV,CAAmB,CAC1BE,IAAI,CAAE,MADoB,CAE1BC,IAAI,CAAE,CACFC,MAAM,CAAEf,WADN,CAEFgB,QAAQ,CAAE,CACN,CACIC,KAAK,CAAE,eADX,CAEIH,IAAI,CAAEV,UAFV,CAGIc,eAAe,CAAE,CACb,sBADa,CAHrB,CAMIC,WAAW,CAAE,CANjB,CADM,CASN,CACIF,KAAK,CAAE,gBADX,CAEIH,IAAI,CAAER,WAFV,CAGIY,eAAe,CAAE,CACb,wBADa,CAHrB,CAMIC,WAAW,CAAE,CANjB,CATM,CAFR,CAFoB,CAuB1BC,OAAO,CAAE,CACLC,KAAK,CAAE,CACHC,OAAO,CAAE,IADN,CAEHC,IAAI,CAAE,gBAFH,CADF,CAKLC,MAAM,CAAE,CACJC,KAAK,CAAE,CAAC,CACJC,KAAK,CAAE,CACHC,WAAW,CAAE,IADV,CADH,CAAD,CADH,CALH,CAvBiB,CAAnB,CAAX,CAsCA,GAAMhC,CAAAA,KAAK,CAAGJ,QAAQ,EAAtB,CAEA,mBACI,KAAC,SAAD,EAAW,KAAK,CAAEI,KAAlB,uBACI,eAAQ,EAAE,CAAE,SAAZ,CAAuB,KAAK,CAAE,GAA9B,EADJ,EADJ,CAKH,CAlED,CAoEA,GAAMiC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACH9B,QAAQ,CAAE8B,KAAK,CAACC,IAAN,CAAW/B,QADlB,CAAP,CAGH,CAJD,CAMA,cAAeT,CAAAA,OAAO,CAACsC,eAAD,CAAP,CAAyB9B,aAAzB,CAAf","sourcesContent":["import React from 'react'\nimport styled from \"@emotion/styled\";\nimport Chart from 'chart.js'\nimport { connect } from 'react-redux'\nimport {useTheme} from \"emotion-theming\";\n\nconst Container = styled.div`\n    flex: 2;\n    border: 1px solid ${props =>props.theme.border};\n    margin-top: 10px;\n    background-color: ${props =>props.theme.boxBackground};\n    @media screen and (max-height: 768px) {\n        > canvas {\n            max-width: 100%;\n            flex: 1;\n        }\n    }\n`\n\nconst PortugalGraph = ({ portugal }) => {\n    // parse json object into array of tracked days\n    let trackedDays = [];\n    for (let i in portugal.days)\n        trackedDays.push(portugal.days[i])\n\n    // parse json object into array of infected\n    let nrInfected = [];\n    for (let i in portugal.infected) {\n        nrInfected.push(portugal.infected[i])\n    }\n\n    // parse json object into array of recovered\n    let nrRecovered = [];\n    for (let i in portugal.recovered) {\n        nrRecovered.push(portugal.recovered[i])\n    }\n\n    const element = document.getElementById('myChart');\n    const context = element && element.getContext('2d');\n\n    context && new Chart(context, {\n        type: 'line',\n        data: {\n            labels: trackedDays,\n            datasets: [\n                {\n                    label: '# of infected',\n                    data: nrInfected,\n                    backgroundColor: [\n                        'rgba(255,25,25, 0.2)',\n                    ],\n                    borderWidth: 1\n                },\n                {\n                    label: '# of recovered',\n                    data: nrRecovered,\n                    backgroundColor: [\n                        'rgba(152,253,149, 0.6)',\n                    ],\n                    borderWidth: 1\n                }\n                ]\n        },\n        options: {\n            title: {\n                display: true,\n                text: 'Portugal track',\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        }\n    });\n\n    const theme = useTheme();\n\n    return (\n        <Container theme={theme}>\n            <canvas id={'myChart'} width={660}/>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        portugal: state.info.portugal,\n    }\n}\n\nexport default connect(mapStateToProps)(PortugalGraph)"]},"metadata":{},"sourceType":"module"}