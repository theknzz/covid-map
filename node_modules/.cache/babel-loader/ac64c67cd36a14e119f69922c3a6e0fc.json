{"ast":null,"code":"import { GetCountryInfoSuccess, GetCountryInfoError, GetWorldInfoSuccess, GetWorldInfoError } from \"../actionList\";\nimport moment from 'moment';\nimport { rounded } from '../../functions/round';\nexport const getMapInfo = country => {\n  return (dispatch, getState) => {\n    fetch(`https://disease.sh/v3/covid-19/countries/${country}?strict=true`).then(res => res.json().then(r => {\n      // parse the api response to store just the used data\n      const country = {\n        updatedAt: moment(r.updated).fromNow(),\n        name: r.country,\n        flag: r.countryInfo.flag,\n        nrInfected: rounded(r.cases),\n        nrDeaths: rounded(r.deaths),\n        nrRecovered: rounded(r.recovered),\n        nrTests: rounded(r.tests)\n      };\n      dispatch({\n        type: GetCountryInfoSuccess,\n        data: country\n      });\n    })).catch(err => {\n      console.error(err);\n      dispatch({\n        type: GetCountryInfoError,\n        data: err\n      });\n    });\n  };\n};\nexport const getWorldInfo = () => {\n  return (dispatch, getState) => {\n    fetch('https://disease.sh/v3/covid-19/countries').then(res => res.json().then(r => {\n      dispatch({\n        type: GetWorldInfoSuccess,\n        data: r\n      });\n    })).catch(err => {\n      dispatch({\n        type: GetWorldInfoError,\n        data: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/joaquim/internship/covid-map/src/store/actions/mapActions.js"],"names":["GetCountryInfoSuccess","GetCountryInfoError","GetWorldInfoSuccess","GetWorldInfoError","moment","rounded","getMapInfo","country","dispatch","getState","fetch","then","res","json","r","updatedAt","updated","fromNow","name","flag","countryInfo","nrInfected","cases","nrDeaths","deaths","nrRecovered","recovered","nrTests","tests","type","data","catch","err","console","error","getWorldInfo"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,mBAAhC,EAAqDC,mBAArD,EAA0EC,iBAA1E,QAAmG,eAAnG;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAa;AACnC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAyB;AAC5BC,IAAAA,KAAK,CAAE,4CAA2CH,OAAQ,cAArD,CAAL,CACKI,IADL,CACWC,GAAG,IAAIA,GAAG,CAACC,IAAJ,GACTF,IADS,CACHG,CAAC,IAAI;AACR;AACA,YAAMP,OAAO,GAAG;AACZQ,QAAAA,SAAS,EAAEX,MAAM,CAACU,CAAC,CAACE,OAAH,CAAN,CAAkBC,OAAlB,EADC;AAEZC,QAAAA,IAAI,EAAEJ,CAAC,CAACP,OAFI;AAGZY,QAAAA,IAAI,EAAEL,CAAC,CAACM,WAAF,CAAcD,IAHR;AAIZE,QAAAA,UAAU,EAAEhB,OAAO,CAACS,CAAC,CAACQ,KAAH,CAJP;AAKZC,QAAAA,QAAQ,EAAElB,OAAO,CAACS,CAAC,CAACU,MAAH,CALL;AAMZC,QAAAA,WAAW,EAAEpB,OAAO,CAACS,CAAC,CAACY,SAAH,CANR;AAOZC,QAAAA,OAAO,EAAEtB,OAAO,CAACS,CAAC,CAACc,KAAH;AAPJ,OAAhB;AASApB,MAAAA,QAAQ,CAAC;AAACqB,QAAAA,IAAI,EAAE7B,qBAAP;AAA8B8B,QAAAA,IAAI,EAAEvB;AAApC,OAAD,CAAR;AACH,KAbS,CADlB,EAeKwB,KAfL,CAeYC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAxB,MAAAA,QAAQ,CAAC;AAACqB,QAAAA,IAAI,EAAE5B,mBAAP;AAA4B6B,QAAAA,IAAI,EAAEE;AAAlC,OAAD,CAAR;AACH,KAlBL;AAmBH,GApBD;AAqBH,CAtBM;AAwBP,OAAO,MAAMG,YAAY,GAAG,MAAM;AAC9B,SAAO,CAAC3B,QAAD,EAAWC,QAAX,KAAwB;AAC3BC,IAAAA,KAAK,CAAC,0CAAD,CAAL,CACKC,IADL,CACWC,GAAG,IAAIA,GAAG,CAACC,IAAJ,GACTF,IADS,CACHG,CAAC,IAAG;AACPN,MAAAA,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE3B,mBAAR;AAA6B4B,QAAAA,IAAI,EAAEhB;AAAnC,OAAD,CAAR;AACH,KAHS,CADlB,EAKKiB,KALL,CAKYC,GAAG,IAAI;AACXxB,MAAAA,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE1B,iBAAR;AAA2B2B,QAAAA,IAAI,EAAEE;AAAjC,OAAD,CAAR;AACH,KAPL;AAQH,GATD;AAUH,CAXM","sourcesContent":["import { GetCountryInfoSuccess, GetCountryInfoError, GetWorldInfoSuccess, GetWorldInfoError } from \"../actionList\";\nimport moment from 'moment';\nimport { rounded } from '../../functions/round'\n\nexport const getMapInfo = (country) => {\n    return (dispatch, getState) =>  {\n        fetch(`https://disease.sh/v3/covid-19/countries/${country}?strict=true`)\n            .then( res => res.json()\n                .then( r => {\n                    // parse the api response to store just the used data\n                    const country = {\n                        updatedAt: moment(r.updated).fromNow(),\n                        name: r.country,\n                        flag: r.countryInfo.flag,\n                        nrInfected: rounded(r.cases),\n                        nrDeaths: rounded(r.deaths),\n                        nrRecovered: rounded(r.recovered),\n                        nrTests: rounded(r.tests),\n                    }\n                    dispatch({type: GetCountryInfoSuccess, data: country});\n                }))\n            .catch( err => {\n                console.error(err);\n                dispatch({type: GetCountryInfoError, data: err});\n            })\n    }\n}\n\nexport const getWorldInfo = () => {\n    return (dispatch, getState) => {\n        fetch('https://disease.sh/v3/covid-19/countries')\n            .then( res => res.json()\n                .then( r =>{\n                    dispatch({ type: GetWorldInfoSuccess, data: r})\n                }))\n            .catch( err => {\n                dispatch({ type: GetWorldInfoError, data: err})\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}